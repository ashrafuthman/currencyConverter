{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/ashraf/code/ashrafuthman/react-hooks-introduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/ashraf/code/ashrafuthman/react-hooks-introduction/src/components/Currency.js\",\n    _s = $RefreshSig$();\n\nimport { useCurrencyLayer } from '../hooks/currencyLayer';\nimport Summary from './Summary';\nimport React, { useState } from 'react';\n\nconst Currency = props => {\n  _s();\n\n  const _useState = useState(['2020-01-01', '2020-01-02']),\n        _useState2 = _slicedToArray(_useState, 2),\n        date = _useState2[0],\n        setdate = _useState2[1];\n\n  const _useCurrencyLayer = useCurrencyLayer({\n    selectedCurrency: props.selectedCurrency,\n    chosenSide: props.chosenSide,\n    date: ['2020-01-01', '2020-01-02']\n  }, [props.selectedCurrency]),\n        _useCurrencyLayer2 = _slicedToArray(_useCurrencyLayer, 2),\n        isLoading = _useCurrencyLayer2[0],\n        fetchedData = _useCurrencyLayer2[1];\n\n  let loadedCurrency = null;\n\n  if (fetchedData) {\n    loadedCurrency = {\n      id: props.selectedCurrency,\n      currencyValue: fetchedData[props.selectedCurrency]\n    };\n  } // useEffect(() => {\n  //   return () => {\n  //     console.log('component did unmount');\n  //   };\n  // }, []);\n\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading Currency...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 17\n  }, this);\n\n  if (!isLoading && loadedCurrency) {\n    content = /*#__PURE__*/_jsxDEV(Summary, {\n      currencyValues: loadedCurrency.currencyValue,\n      dates: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  } else if (!isLoading && !loadedCurrency) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Failed to fetch Currency.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }, this);\n  }\n\n  return content;\n};\n\n_s(Currency, \"YvbC8+1XHlWQn7pwlKI8/tg7DiY=\", false, function () {\n  return [useCurrencyLayer];\n});\n\n_c = Currency;\nexport default _c2 = /*#__PURE__*/React.memo(Currency);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Currency\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/ashraf/code/ashrafuthman/react-hooks-introduction/src/components/Currency.js"],"names":["useCurrencyLayer","Summary","React","useState","Currency","props","date","setdate","selectedCurrency","chosenSide","isLoading","fetchedData","loadedCurrency","id","currencyValue","content","memo"],"mappings":";;;;;;AAAA,SAASA,gBAAT,QAAiC,wBAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAAA;;AAAA,oBACAF,QAAQ,CAAC,CAAC,YAAD,EAAe,YAAf,CAAD,CADR;AAAA;AAAA,QACjBG,IADiB;AAAA,QACXC,OADW;;AAAA,4BAGSP,gBAAgB,CAC/C;AAACQ,IAAAA,gBAAgB,EAAEH,KAAK,CAACG,gBAAzB;AAA2CC,IAAAA,UAAU,EAAEJ,KAAK,CAACI,UAA7D;AAAyEH,IAAAA,IAAI,EAAE,CAAC,YAAD,EAAe,YAAf;AAA/E,GAD+C,EAE/C,CAACD,KAAK,CAACG,gBAAP,CAF+C,CAHzB;AAAA;AAAA,QAGjBE,SAHiB;AAAA,QAGNC,WAHM;;AAQxB,MAAIC,cAAc,GAAG,IAArB;;AAEA,MAAID,WAAJ,EAAiB;AACfC,IAAAA,cAAc,GAAG;AACfC,MAAAA,EAAE,EAAER,KAAK,CAACG,gBADK;AAEfM,MAAAA,aAAa,EAAEH,WAAW,CAACN,KAAK,CAACG,gBAAP;AAFX,KAAjB;AAID,GAfuB,CAiBxB;AACA;AACA;AACA;AACA;;;AAEA,MAAIO,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;;AAEA,MAAI,CAACL,SAAD,IAAcE,cAAlB,EAAkC;AAChCG,IAAAA,OAAO,gBACL,QAAC,OAAD;AACE,MAAA,cAAc,EAAEH,cAAc,CAACE,aADjC;AAEE,MAAA,KAAK,EAAER;AAFT;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GAPD,MAOO,IAAI,CAACI,SAAD,IAAc,CAACE,cAAnB,EAAmC;AACxCG,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AACD,SAAOA,OAAP;AACD,CApCD;;GAAMX,Q;UAG6BJ,gB;;;KAH7BI,Q;AAsCN,kCAAeF,KAAK,CAACc,IAAN,CAAWZ,QAAX,CAAf","sourcesContent":["import { useCurrencyLayer } from '../hooks/currencyLayer';\nimport Summary from './Summary';\nimport React, { useState } from 'react';\n\nconst Currency = props => {\n  const [date, setdate] = useState(['2020-01-01', '2020-01-02']);\n\n  const [isLoading, fetchedData] = useCurrencyLayer(\n    {selectedCurrency: props.selectedCurrency, chosenSide: props.chosenSide, date: ['2020-01-01', '2020-01-02']},\n    [props.selectedCurrency]\n  );\n\n  let loadedCurrency = null;\n\n  if (fetchedData) {\n    loadedCurrency = {\n      id: props.selectedCurrency,\n      currencyValue: fetchedData[props.selectedCurrency],\n    };\n  }\n\n  // useEffect(() => {\n  //   return () => {\n  //     console.log('component did unmount');\n  //   };\n  // }, []);\n\n  let content = <p>Loading Currency...</p>;\n\n  if (!isLoading && loadedCurrency) {\n    content = (\n      <Summary\n        currencyValues={loadedCurrency.currencyValue}\n        dates={date}\n      />\n    );\n  } else if (!isLoading && !loadedCurrency) {\n    content = <p>Failed to fetch Currency.</p>;\n  }\n  return content;\n};\n\nexport default React.memo(Currency);\n"]},"metadata":{},"sourceType":"module"}