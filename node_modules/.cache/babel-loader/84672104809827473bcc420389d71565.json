{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/ashraf/code/ashrafuthman/react-hooks-introduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/ashraf/code/ashrafuthman/react-hooks-introduction/src/components/CurrencyPicker.js\",\n    _s = $RefreshSig$();\n\nimport { useCurrencyLayer } from '../hooks/currencyLayer';\nimport './CurrencyPicker.css';\nimport Summary from './Summary';\nimport React, { useState } from 'react';\n\nconst CurrencyPicker = () => {\n  _s();\n\n  const _useState = useState('USDEUR'),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedCurrency = _useState2[0],\n        setSelectedCurrency = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        eurWeeklyValues = _useState4[0],\n        setEurWeeklyValues = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        chfWeeklyValues = _useState6[0],\n        setChfWeeklyValues = _useState6[1];\n\n  const _useCurrencyLayer = useCurrencyLayer({\n    selectedCurrency,\n    currencies: ['EUR', 'CHF'],\n    date: ['2020-01-01', '2020-01-02', '2020-01-03', '2020-01-04', '2020-01-05', '2020-01-06', '2020-02-06']\n  }, []),\n        _useCurrencyLayer2 = _slicedToArray(_useCurrencyLayer, 2),\n        isLoading = _useCurrencyLayer2[0],\n        fetchedData = _useCurrencyLayer2[1];\n\n  let latestCurrencies;\n  const currencyValues = [];\n  const currencyDate = [];\n\n  const currencySelectHandler = event => {\n    const currency = event.target.value;\n    setSelectedCurrency(currency);\n  };\n\n  const currencyName = name => {\n    let unwantedString = name.includes('EUR') ? 'EUR' : 'USD';\n    return name.replace(unwantedString, '');\n  };\n\n  if (fetchedData) {\n    fetchedData.forEach((data, index) => {\n      if (index === 6) {\n        latestCurrencies = Object.keys(data.currencyValues).map((currency, index) => ({\n          id: index + 1,\n          name: currency\n        }));\n      }\n\n      changeNormToEur();\n      currencyValues.push(data.currencyValues[selectedCurrency]);\n      let dateArr = data.date.split('-');\n      let monthDayFormat = [dateArr[1], dateArr[2]].join('-');\n      currencyDate.push(monthDayFormat);\n    });\n  }\n\n  let test;\n\n  if (currencyName(selectedCurrency) === 'USD' && currencyValues.length === 7) {\n    test = currencyValues.map(currencyValue => {\n      let r = 1 - currencyValue;\n      let c = r / currencyValue;\n      let d = c * 1;\n      return r = (d + 1).toFixed(2);\n    });\n  } else {\n    test = currencyValues;\n  }\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading Currencys...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 17\n  }, this);\n\n  if (!isLoading && latestCurrencies && latestCurrencies.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: currencySelectHandler,\n        value: selectedCurrency,\n        children: latestCurrencies.map(currency => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: currency.name,\n          children: currencyName(currency.name)\n        }, currency.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Summary, {\n        selectedCurrency: currencyName(selectedCurrency),\n        currencyValues: test,\n        dates: currencyDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else if (!isLoading && (!latestCurrencies || latestCurrencies.length === 0)) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Could not fetch any data.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }, this);\n  }\n\n  return content;\n};\n\n_s(CurrencyPicker, \"CbJI94UXPyQ/8jZxkXMGEidbLI8=\", false, function () {\n  return [useCurrencyLayer];\n});\n\n_c = CurrencyPicker;\nexport default CurrencyPicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencyPicker\");","map":{"version":3,"sources":["/home/ashraf/code/ashrafuthman/react-hooks-introduction/src/components/CurrencyPicker.js"],"names":["useCurrencyLayer","Summary","React","useState","CurrencyPicker","selectedCurrency","setSelectedCurrency","eurWeeklyValues","setEurWeeklyValues","chfWeeklyValues","setChfWeeklyValues","currencies","date","isLoading","fetchedData","latestCurrencies","currencyValues","currencyDate","currencySelectHandler","event","currency","target","value","currencyName","name","unwantedString","includes","replace","forEach","data","index","Object","keys","map","id","changeNormToEur","push","dateArr","split","monthDayFormat","join","test","length","currencyValue","r","c","d","toFixed","content"],"mappings":"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","sourcesContent":["import { useCurrencyLayer } from '../hooks/currencyLayer';\nimport './CurrencyPicker.css';\nimport Summary from './Summary';\nimport React, { useState } from 'react';\n\nconst CurrencyPicker = () => {\n  const [selectedCurrency, setSelectedCurrency] = useState('USDEUR');\n  const [eurWeeklyValues, setEurWeeklyValues] = useState([]);\n  const [chfWeeklyValues, setChfWeeklyValues] = useState([]);\n  const [isLoading, fetchedData] = useCurrencyLayer(\n    { selectedCurrency, currencies: ['EUR','CHF'], date: [\n      '2020-01-01',\n      '2020-01-02',\n      '2020-01-03',\n      '2020-01-04',\n      '2020-01-05', '2020-01-06' , '2020-02-06'] }, []);\n  let latestCurrencies;\n  const currencyValues = [];\n  const currencyDate = [];\n\n  const currencySelectHandler = event => {\n      const currency = event.target.value;\n      setSelectedCurrency(currency);\n  };\n\n  const currencyName = name => {\n    let unwantedString = name.includes('EUR') ? 'EUR' : 'USD';\n    return name.replace(unwantedString, '')\n  };\n\n\n  if (fetchedData) {\n   fetchedData.forEach((data, index) => {\n    if (index === 6) {\n      latestCurrencies = Object.keys(data.currencyValues).map((currency, index) => ({\n        id: index + 1,\n        name: currency,\n      }));\n    }\n      changeNormToEur()\n      currencyValues.push(data.currencyValues[selectedCurrency]);\n      let dateArr = data.date.split('-');\n      let monthDayFormat =[dateArr[1], dateArr[2]].join('-');\n      currencyDate.push(monthDayFormat);\n    })\n  }\nlet test;\n  if (currencyName(selectedCurrency) === 'USD' && currencyValues.length === 7) {\n    test = currencyValues.map((currencyValue) => {\n      let r = 1 - currencyValue;\n      let c = r / currencyValue;\n      let d = c * 1;\n      return r = (d + 1).toFixed(2);\n    })\n  } else {\n    test = currencyValues;\n  }\n  let content = <p>Loading Currencys...</p>;\n\n  if (!isLoading && latestCurrencies && latestCurrencies.length > 0) {\n    content = (\n      <>\n        <select\n          onChange={currencySelectHandler}\n          value={selectedCurrency}\n        >\n          {latestCurrencies.map(currency => (\n            <option key={currency.id} value={currency.name}>\n              {currencyName(currency.name)}\n            </option>\n          ))}\n        </select>\n        <br/>\n        <Summary\n          selectedCurrency={currencyName(selectedCurrency)}\n          currencyValues={test}\n          dates={currencyDate}\n        />\n      </>\n    );\n  } else if (\n    !isLoading &&\n    (!latestCurrencies || latestCurrencies.length === 0)\n  ) {\n    content = <p>Could not fetch any data.</p>;\n  }\n  return content;\n};\n\nexport default CurrencyPicker;\n"]},"metadata":{},"sourceType":"module"}