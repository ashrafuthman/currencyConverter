{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/ashraf/code/ashrafuthman/react-hooks-introduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/ashraf/code/ashrafuthman/react-hooks-introduction/src/components/Currency.js\",\n    _s = $RefreshSig$();\n\nimport { useCurrencyLayer } from '../hooks/currencyLayer';\nimport Summary from './Summary';\nimport React, { useState } from 'react';\n\nconst Currency = props => {\n  _s();\n\n  const _useState = useState(['2020-01-01', '2020-01-02']),\n        _useState2 = _slicedToArray(_useState, 2),\n        date = _useState2[0],\n        setdate = _useState2[1];\n\n  const _useCurrencyLayer = useCurrencyLayer({\n    selectedCurrency: props.selectedCurrency,\n    date: ['2020-01-01', '2020-01-02'],\n    currencies: ['EUR', 'CHF']\n  }, [props.selectedCurrency]),\n        _useCurrencyLayer2 = _slicedToArray(_useCurrencyLayer, 2),\n        isLoading = _useCurrencyLayer2[0],\n        fetchedData = _useCurrencyLayer2[1];\n\n  let loadedCurrency = null;\n  useEffect(() => {\n    return () => {\n      let currencyValues = [];\n      let currencyDate = [];\n\n      if (fetchedData && fetchedData.length === 2) {\n        fetchedData.forEach(data => {\n          debugger;\n          currencyValues.push(data.currencyValues[props.selectedCurrency]);\n          currencyDate.push(data.date);\n          loadedCurrency = {\n            id: props.selectedCurrency,\n            currencyValue: currencyValues,\n            dates: currencyDate\n          };\n        });\n        debugger;\n      }\n    };\n  }, []);\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading Currency...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 17\n  }, this);\n\n  if (!isLoading && loadedCurrency) {\n    content = /*#__PURE__*/_jsxDEV(Summary, {\n      selectedCurrency: props.selectedCurrency || [],\n      currencyValues: loadedCurrency.currencyValue || [],\n      dates: date || []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  } else if (!isLoading && !loadedCurrency) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Failed to fetch Currency.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }, this);\n  }\n\n  return content;\n};\n\n_s(Currency, \"UEsTKydULu10LzJP2LUFMq9QVsI=\", false, function () {\n  return [useCurrencyLayer];\n});\n\n_c = Currency;\nexport default _c2 = /*#__PURE__*/React.memo(Currency);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Currency\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/ashraf/code/ashrafuthman/react-hooks-introduction/src/components/Currency.js"],"names":["useCurrencyLayer","Summary","React","useState","Currency","props","date","setdate","selectedCurrency","currencies","isLoading","fetchedData","loadedCurrency","useEffect","currencyValues","currencyDate","length","forEach","data","push","id","currencyValue","dates","content","memo"],"mappings":";;;;;;AAAA,SAASA,gBAAT,QAAiC,wBAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAAA;;AAAA,oBACAF,QAAQ,CAAC,CAAC,YAAD,EAAe,YAAf,CAAD,CADR;AAAA;AAAA,QACjBG,IADiB;AAAA,QACXC,OADW;;AAAA,4BAGSP,gBAAgB,CAC/C;AAACQ,IAAAA,gBAAgB,EAAEH,KAAK,CAACG,gBAAzB;AAA2CF,IAAAA,IAAI,EAAE,CAAC,YAAD,EAAe,YAAf,CAAjD;AAA+EG,IAAAA,UAAU,EAAE,CAAC,KAAD,EAAO,KAAP;AAA3F,GAD+C,EAE/C,CAACJ,KAAK,CAACG,gBAAP,CAF+C,CAHzB;AAAA;AAAA,QAGjBE,SAHiB;AAAA,QAGNC,WAHM;;AAOxB,MAAIC,cAAc,GAAG,IAArB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,WAAO,MAAM;AACX,UAAIC,cAAc,GAAG,EAArB;AACA,UAAIC,YAAY,GAAG,EAAnB;;AACA,UAAIJ,WAAW,IAAIA,WAAW,CAACK,MAAZ,KAAuB,CAA1C,EAA6C;AAC5CL,QAAAA,WAAW,CAACM,OAAZ,CAAqBC,IAAD,IAAU;AAC5B;AACAJ,UAAAA,cAAc,CAACK,IAAf,CAAoBD,IAAI,CAACJ,cAAL,CAAoBT,KAAK,CAACG,gBAA1B,CAApB;AACAO,UAAAA,YAAY,CAACI,IAAb,CAAkBD,IAAI,CAACZ,IAAvB;AACCM,UAAAA,cAAc,GAAG;AACfQ,YAAAA,EAAE,EAAEf,KAAK,CAACG,gBADK;AAEfa,YAAAA,aAAa,EAAEP,cAFA;AAGfQ,YAAAA,KAAK,EAAEP;AAHQ,WAAjB;AAKD,SATF;AAUC;AACD;AACE,KAhBL;AAiBD,GAlBQ,EAkBN,EAlBM,CAAT;;AAoBA,MAAIQ,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;;AAEA,MAAI,CAACb,SAAD,IAAcE,cAAlB,EAAkC;AAChCW,IAAAA,OAAO,gBACL,QAAC,OAAD;AACE,MAAA,gBAAgB,EAAElB,KAAK,CAACG,gBAAN,IAA0B,EAD9C;AAEE,MAAA,cAAc,EAAEI,cAAc,CAACS,aAAf,IAAgC,EAFlD;AAGE,MAAA,KAAK,EAAEf,IAAI,IAAI;AAHjB;AAAA;AAAA;AAAA;AAAA,YADF;AAOD,GARD,MAQO,IAAI,CAACI,SAAD,IAAc,CAACE,cAAnB,EAAmC;AACxCW,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AACD,SAAOA,OAAP;AACD,CA3CD;;GAAMnB,Q;UAG6BJ,gB;;;KAH7BI,Q;AA6CN,kCAAeF,KAAK,CAACsB,IAAN,CAAWpB,QAAX,CAAf","sourcesContent":["import { useCurrencyLayer } from '../hooks/currencyLayer';\nimport Summary from './Summary';\nimport React, { useState } from 'react';\n\nconst Currency = props => {\n  const [date, setdate] = useState(['2020-01-01', '2020-01-02']);\n\n  const [isLoading, fetchedData] = useCurrencyLayer(\n    {selectedCurrency: props.selectedCurrency, date: ['2020-01-01', '2020-01-02'], currencies: ['EUR','CHF']},\n    [props.selectedCurrency]\n  );\n  let loadedCurrency = null;\n\n  useEffect(() => {\n    return () => {\n      let currencyValues = [];\n      let currencyDate = [];\n      if (fetchedData && fetchedData.length === 2) {\n       fetchedData.forEach((data) => {\n         debugger;\n         currencyValues.push(data.currencyValues[props.selectedCurrency]);\n         currencyDate.push(data.date);\n          loadedCurrency = {\n            id: props.selectedCurrency,\n            currencyValue: currencyValues,\n            dates: currencyDate\n          };\n        })\n        debugger;\n      }\n        };\n  }, []);\n\n  let content = <p>Loading Currency...</p>;\n\n  if (!isLoading && loadedCurrency) {\n    content = (\n      <Summary\n        selectedCurrency={props.selectedCurrency || []}\n        currencyValues={loadedCurrency.currencyValue || []}\n        dates={date || []}\n      />\n    );\n  } else if (!isLoading && !loadedCurrency) {\n    content = <p>Failed to fetch Currency.</p>;\n  }\n  return content;\n};\n\nexport default React.memo(Currency);\n"]},"metadata":{},"sourceType":"module"}