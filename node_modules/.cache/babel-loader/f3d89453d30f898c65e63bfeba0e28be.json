{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/ashraf/code/ashrafuthman/react-hooks-introduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/ashraf/code/ashrafuthman/react-hooks-introduction/src/components/CurrencyPicker.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useCurrencyLayer } from '../hooks/currencyLayer';\nimport './CurrencyPicker.css';\n\nconst CurrencyPicker = props => {\n  _s();\n\n  const _useCurrencyLayer = useCurrencyLayer({\n    selectedCurrency: props.selectedCurrency,\n    currencies: ['EUR', 'CHF'],\n    date: ['2020-01-01']\n  }, []),\n        _useCurrencyLayer2 = _slicedToArray(_useCurrencyLayer, 2),\n        isLoading = _useCurrencyLayer2[0],\n        fetchedData = _useCurrencyLayer2[1]; // const latestCurrencies = fetchedData\n\n\n  let latestCurrencies;\n  debugger;\n\n  if (fetchedData) {\n    debugger;\n    latestCurrencies = fetchedData.slice(-1)[0].currencyValues ? Object.keys(latestCurrencies).map((currency, index) => ({\n      id: index + 1,\n      name: currency,\n      value: fetchedData[currency]\n    })) : [];\n  }\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading Currencys...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 17\n  }, this);\n\n  if (!isLoading && latestCurrencies && latestCurrencies.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: props.onCurrencySelect,\n      value: props.selectedCurrency.key,\n      children: latestCurrencies.map(currency => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: currency.name,\n        children: [currency.name, \" \", currency.value]\n      }, currency.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  } else if (!isLoading && (!latestCurrencies || latestCurrencies.length === 0)) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Could not fetch any data.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }, this);\n  }\n\n  return content;\n};\n\n_s(CurrencyPicker, \"n14PydaXUL0pOdKmSMjxG6uL2Yw=\", false, function () {\n  return [useCurrencyLayer];\n});\n\n_c = CurrencyPicker;\nexport default CurrencyPicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencyPicker\");","map":{"version":3,"sources":["/home/ashraf/code/ashrafuthman/react-hooks-introduction/src/components/CurrencyPicker.js"],"names":["React","useCurrencyLayer","CurrencyPicker","props","selectedCurrency","currencies","date","isLoading","fetchedData","latestCurrencies","slice","currencyValues","Object","keys","map","currency","index","id","name","value","content","length","onCurrencySelect","key"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAO,sBAAP;;AAEA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAAA;;AAAA,4BACGF,gBAAgB,CAC/C;AAAEG,IAAAA,gBAAgB,EAAED,KAAK,CAACC,gBAA1B;AACAC,IAAAA,UAAU,EAAE,CAAC,KAAD,EAAO,KAAP,CADZ;AAC2BC,IAAAA,IAAI,EAAE,CAAC,YAAD;AADjC,GAD+C,EAEI,EAFJ,CADnB;AAAA;AAAA,QACvBC,SADuB;AAAA,QACZC,WADY,0BAK9B;;;AACA,MAAIC,gBAAJ;AACA;;AACA,MAAID,WAAJ,EAAiB;AACf;AACAC,IAAAA,gBAAgB,GAAGD,WAAW,CAACE,KAAZ,CAAkB,CAAC,CAAnB,EAAsB,CAAtB,EAAyBC,cAAzB,GACjBC,MAAM,CAACC,IAAP,CAAYJ,gBAAZ,EAA8BK,GAA9B,CAAkC,CAACC,QAAD,EAAWC,KAAX,MAAsB;AACtDC,MAAAA,EAAE,EAAED,KAAK,GAAG,CAD0C;AAEtDE,MAAAA,IAAI,EAAEH,QAFgD;AAGtDI,MAAAA,KAAK,EAAEX,WAAW,CAACO,QAAD;AAHoC,KAAtB,CAAlC,CADiB,GAMjB,EANF;AAOD;;AAED,MAAIK,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;;AAEA,MAAI,CAACb,SAAD,IAAcE,gBAAd,IAAkCA,gBAAgB,CAACY,MAAjB,GAA0B,CAAhE,EAAmE;AACjED,IAAAA,OAAO,gBACL;AACE,MAAA,QAAQ,EAAEjB,KAAK,CAACmB,gBADlB;AAEE,MAAA,KAAK,EAAEnB,KAAK,CAACC,gBAAN,CAAuBmB,GAFhC;AAAA,gBAIGd,gBAAgB,CAACK,GAAjB,CAAqBC,QAAQ,iBAC5B;AAA0B,QAAA,KAAK,EAAEA,QAAQ,CAACG,IAA1C;AAAA,mBACGH,QAAQ,CAACG,IADZ,OACmBH,QAAQ,CAACI,KAD5B;AAAA,SAAaJ,QAAQ,CAACE,EAAtB;AAAA;AAAA;AAAA;AAAA,cADD;AAJH;AAAA;AAAA;AAAA;AAAA,YADF;AAYD,GAbD,MAaO,IACL,CAACV,SAAD,KACC,CAACE,gBAAD,IAAqBA,gBAAgB,CAACY,MAAjB,KAA4B,CADlD,CADK,EAGL;AACAD,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AACD,SAAOA,OAAP;AACD,CAzCD;;GAAMlB,c;UAC6BD,gB;;;KAD7BC,c;AA2CN,eAAeA,cAAf","sourcesContent":["import React from 'react';\nimport { useCurrencyLayer } from '../hooks/currencyLayer';\nimport './CurrencyPicker.css';\n\nconst CurrencyPicker = props => {\n  const [isLoading, fetchedData] = useCurrencyLayer(\n    { selectedCurrency: props.selectedCurrency,\n    currencies: ['EUR','CHF'], date: ['2020-01-01'] }, []);\n\n  // const latestCurrencies = fetchedData\n  let latestCurrencies;\n  debugger\n  if (fetchedData) {\n    debugger;\n    latestCurrencies = fetchedData.slice(-1)[0].currencyValues\n    ? Object.keys(latestCurrencies).map((currency, index) => ({\n        id: index + 1,\n        name: currency,\n        value: fetchedData[currency]\n      }))\n    : [];\n  }\n\n  let content = <p>Loading Currencys...</p>;\n\n  if (!isLoading && latestCurrencies && latestCurrencies.length > 0) {\n    content = (\n      <select\n        onChange={props.onCurrencySelect}\n        value={props.selectedCurrency.key}\n      >\n        {latestCurrencies.map(currency => (\n          <option key={currency.id} value={currency.name}>\n            {currency.name} {currency.value}\n          </option>\n        ))}\n      </select>\n    );\n  } else if (\n    !isLoading &&\n    (!latestCurrencies || latestCurrencies.length === 0)\n  ) {\n    content = <p>Could not fetch any data.</p>;\n  }\n  return content;\n};\n\nexport default CurrencyPicker;\n"]},"metadata":{},"sourceType":"module"}