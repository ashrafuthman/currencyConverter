{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/ashraf/code/ashrafuthman/react-hooks-introduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/ashraf/code/ashrafuthman/react-hooks-introduction/src/components/Currency.js\",\n    _s = $RefreshSig$();\n\nimport { useCurrencyLayer } from '../hooks/currencyLayer';\nimport Summary from './Summary';\nimport React, { useState } from 'react';\n\nconst Currency = props => {\n  _s();\n\n  const _useState = useState(['2020-01-01', '2020-01-02']),\n        _useState2 = _slicedToArray(_useState, 2),\n        date = _useState2[0],\n        setdate = _useState2[1];\n\n  const _useCurrencyLayer = useCurrencyLayer({\n    selectedCurrency: props.selectedCurrency,\n    date: ['2020-01-01', '2020-01-02'],\n    currencies: ['EUR', 'CHF']\n  }, [props.selectedCurrency]),\n        _useCurrencyLayer2 = _slicedToArray(_useCurrencyLayer, 2),\n        isLoading = _useCurrencyLayer2[0],\n        fetchedData = _useCurrencyLayer2[1];\n\n  let loadedCurrency = null;\n  let currencyValues = [];\n  let currencyDate = [];\n\n  if (fetchedData && fetchedData.length === 2) {\n    fetchedData.forEach(data => {\n      debugger;\n      currencyValues.push(data.currencyValues[props.selectedCurrency]);\n      currencyDate.push(data.date);\n      loadedCurrency = {\n        id: props.selectedCurrency,\n        currencyValue: currencyValues,\n        dates: currencyDate\n      };\n    });\n    debugger;\n  } // useEffect(() => {\n  //   return () => {\n  //     console.log('component did unmount');\n  //   };\n  // }, []);\n\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading Currency...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 17\n  }, this);\n\n  content = /*#__PURE__*/_jsxDEV(Summary, {\n    selectedCurrency: props.selectedCurrency || [],\n    currencyValues: loadedCurrency && loadedCurrency.currencyValue ? loadedCurrency.currencyValue : [],\n    dates: date || []\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n  return content;\n};\n\n_s(Currency, \"YvbC8+1XHlWQn7pwlKI8/tg7DiY=\", false, function () {\n  return [useCurrencyLayer];\n});\n\n_c = Currency;\nexport default _c2 = /*#__PURE__*/React.memo(Currency);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Currency\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/ashraf/code/ashrafuthman/react-hooks-introduction/src/components/Currency.js"],"names":["useCurrencyLayer","Summary","React","useState","Currency","props","date","setdate","selectedCurrency","currencies","isLoading","fetchedData","loadedCurrency","currencyValues","currencyDate","length","forEach","data","push","id","currencyValue","dates","content","memo"],"mappings":";;;;;;AAAA,SAASA,gBAAT,QAAiC,wBAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAAA;;AAAA,oBACAF,QAAQ,CAAC,CAAC,YAAD,EAAe,YAAf,CAAD,CADR;AAAA;AAAA,QACjBG,IADiB;AAAA,QACXC,OADW;;AAAA,4BAGSP,gBAAgB,CAC/C;AAACQ,IAAAA,gBAAgB,EAAEH,KAAK,CAACG,gBAAzB;AAA2CF,IAAAA,IAAI,EAAE,CAAC,YAAD,EAAe,YAAf,CAAjD;AAA+EG,IAAAA,UAAU,EAAE,CAAC,KAAD,EAAO,KAAP;AAA3F,GAD+C,EAE/C,CAACJ,KAAK,CAACG,gBAAP,CAF+C,CAHzB;AAAA;AAAA,QAGjBE,SAHiB;AAAA,QAGNC,WAHM;;AAQxB,MAAIC,cAAc,GAAG,IAArB;AACA,MAAIC,cAAc,GAAG,EAArB;AACA,MAAIC,YAAY,GAAG,EAAnB;;AACA,MAAIH,WAAW,IAAIA,WAAW,CAACI,MAAZ,KAAuB,CAA1C,EAA6C;AAC5CJ,IAAAA,WAAW,CAACK,OAAZ,CAAqBC,IAAD,IAAU;AAC5B;AACAJ,MAAAA,cAAc,CAACK,IAAf,CAAoBD,IAAI,CAACJ,cAAL,CAAoBR,KAAK,CAACG,gBAA1B,CAApB;AACAM,MAAAA,YAAY,CAACI,IAAb,CAAkBD,IAAI,CAACX,IAAvB;AACCM,MAAAA,cAAc,GAAG;AACfO,QAAAA,EAAE,EAAEd,KAAK,CAACG,gBADK;AAEfY,QAAAA,aAAa,EAAEP,cAFA;AAGfQ,QAAAA,KAAK,EAAEP;AAHQ,OAAjB;AAKD,KATF;AAUC;AACD,GAvBuB,CAyBxB;AACA;AACA;AACA;AACA;;;AAEA,MAAIQ,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;;AAEEA,EAAAA,OAAO,gBACL,QAAC,OAAD;AACE,IAAA,gBAAgB,EAAEjB,KAAK,CAACG,gBAAN,IAA0B,EAD9C;AAEE,IAAA,cAAc,EAAGI,cAAc,IAAIA,cAAc,CAACQ,aAAjC,GAAiDR,cAAc,CAACQ,aAAhE,GAAgF,EAFnG;AAGE,IAAA,KAAK,EAAEd,IAAI,IAAI;AAHjB;AAAA;AAAA;AAAA;AAAA,UADF;AAQF,SAAOgB,OAAP;AACD,CA1CD;;GAAMlB,Q;UAG6BJ,gB;;;KAH7BI,Q;AA4CN,kCAAeF,KAAK,CAACqB,IAAN,CAAWnB,QAAX,CAAf","sourcesContent":["import { useCurrencyLayer } from '../hooks/currencyLayer';\nimport Summary from './Summary';\nimport React, { useState } from 'react';\n\nconst Currency = props => {\n  const [date, setdate] = useState(['2020-01-01', '2020-01-02']);\n\n  const [isLoading, fetchedData] = useCurrencyLayer(\n    {selectedCurrency: props.selectedCurrency, date: ['2020-01-01', '2020-01-02'], currencies: ['EUR','CHF']},\n    [props.selectedCurrency]\n  );\n\n  let loadedCurrency = null;\n  let currencyValues = [];\n  let currencyDate = [];\n  if (fetchedData && fetchedData.length === 2) {\n   fetchedData.forEach((data) => {\n     debugger;\n     currencyValues.push(data.currencyValues[props.selectedCurrency]);\n     currencyDate.push(data.date);\n      loadedCurrency = {\n        id: props.selectedCurrency,\n        currencyValue: currencyValues,\n        dates: currencyDate\n      };\n    })\n    debugger;\n  }\n\n  // useEffect(() => {\n  //   return () => {\n  //     console.log('component did unmount');\n  //   };\n  // }, []);\n\n  let content = <p>Loading Currency...</p>;\n\n    content = (\n      <Summary\n        selectedCurrency={props.selectedCurrency || []}\n        currencyValues={ loadedCurrency && loadedCurrency.currencyValue ? loadedCurrency.currencyValue : []}\n        dates={date || []}\n      />\n    );\n\n  return content;\n};\n\nexport default React.memo(Currency);\n"]},"metadata":{},"sourceType":"module"}