{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/ashraf/code/ashrafuthman/react-hooks-introduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/ashraf/code/ashrafuthman/react-hooks-introduction/src/components/CurrencyPicker.js\",\n    _s = $RefreshSig$();\n\nimport { useCurrencyLayer } from '../hooks/currencyLayer';\nimport './CurrencyPicker.css';\nimport Summary from './Summary';\nimport React, { useState } from 'react';\n\nconst CurrencyPicker = () => {\n  _s();\n\n  const _useState = useState('USDEUR'),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedCurrency = _useState2[0],\n        setSelectedCurrency = _useState2[1];\n\n  const _useCurrencyLayer = useCurrencyLayer({\n    selectedCurrency,\n    currencies: ['EUR', 'CHF'],\n    date: ['2020-01-01', '2020-01-02', '2020-01-03', '2020-01-04', '2020-01-05', '2020-01-06', '2020-01-07']\n  }, []),\n        _useCurrencyLayer2 = _slicedToArray(_useCurrencyLayer, 2),\n        isLoading = _useCurrencyLayer2[0],\n        fetchedData = _useCurrencyLayer2[1];\n\n  const currencySelectHandler = event => {\n    const currency = event.target.value;\n    setSelectedCurrency(currency);\n  };\n\n  let latestCurrencies = [];\n  let currencyValues = [];\n  let currencyDate = [];\n\n  if (fetchedData && fetchedData.length == 7) {\n    fetchedData.forEach((data, index) => {\n      if (index === 6) {\n        debugger;\n      }\n\n      currencyValues.push(data.currencyValues[selectedCurrency]);\n      currencyDate.push(data.date);\n    });\n    const res = fetchedData.slice(-1)[0].currencyValues;\n    latestCurrencies = Object.keys(res).map((currency, index) => ({\n      id: index + 1,\n      name: currency\n    }));\n  }\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading Currencys...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 17\n  }, this);\n\n  if (!isLoading && latestCurrencies && latestCurrencies.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: currencySelectHandler,\n        value: selectedCurrency,\n        children: latestCurrencies.map(currency => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: currency.name,\n          children: currency.name\n        }, currency.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Summary, {\n        selectedCurrency: selectedCurrency,\n        currencyValues: currencyValues,\n        dates: currencyDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else if (!isLoading && !latestCurrencies && latestCurrencies.length === 0) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Could not fetch any data.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }, this);\n  }\n\n  return content;\n};\n\n_s(CurrencyPicker, \"8+nfksKGzDO65BeYRZT0hAK1GVU=\", false, function () {\n  return [useCurrencyLayer];\n});\n\n_c = CurrencyPicker;\nexport default CurrencyPicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencyPicker\");","map":{"version":3,"sources":["/home/ashraf/code/ashrafuthman/react-hooks-introduction/src/components/CurrencyPicker.js"],"names":["useCurrencyLayer","Summary","React","useState","CurrencyPicker","selectedCurrency","setSelectedCurrency","currencies","date","isLoading","fetchedData","currencySelectHandler","event","currency","target","value","latestCurrencies","currencyValues","currencyDate","length","forEach","data","index","push","res","slice","Object","keys","map","id","name","content"],"mappings":"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","sourcesContent":["import { useCurrencyLayer } from '../hooks/currencyLayer';\nimport './CurrencyPicker.css';\nimport Summary from './Summary';\nimport React, { useState } from 'react';\n\nconst CurrencyPicker = () => {\n  const [selectedCurrency, setSelectedCurrency] = useState('USDEUR');\n  const [isLoading, fetchedData] = useCurrencyLayer(\n    { selectedCurrency, currencies: ['EUR','CHF'], date: [\n      '2020-01-01',\n      '2020-01-02',\n      '2020-01-03',\n      '2020-01-04',\n      '2020-01-05', '2020-01-06' , '2020-01-07'] }, []);\n\n  const currencySelectHandler = event => {\n      const currency = event.target.value;\n      setSelectedCurrency(currency);\n  };\n\n  let latestCurrencies = [];\n  let currencyValues = [];\n  let currencyDate = [];\n  if (fetchedData && fetchedData.length == 7) {\n   fetchedData.forEach((data, index) => {\n     if (index === 6) {\n       debugger;\n     }\n     currencyValues.push(data.currencyValues[selectedCurrency]);\n     currencyDate.push(data.date);\n    })\n    const res = fetchedData.slice(-1)[0].currencyValues;\n    latestCurrencies =  Object.keys(res).map((currency, index) => ({\n        id: index + 1,\n        name: currency,\n      }));\n  }\n\n  let content = <p>Loading Currencys...</p>;\n\n  if (!isLoading && latestCurrencies && latestCurrencies.length > 0) {\n    content = (\n      <>\n        <select\n          onChange={currencySelectHandler}\n          value={selectedCurrency}\n        >\n          {latestCurrencies.map(currency => (\n            <option key={currency.id} value={currency.name}>\n              {currency.name}\n            </option>\n          ))}\n        </select>\n        <br/>\n        <Summary\n          selectedCurrency={selectedCurrency}\n          currencyValues={currencyValues}\n          dates={currencyDate}\n        />\n      </>\n    );\n  } else if (\n    !isLoading &&\n    (!latestCurrencies && latestCurrencies.length === 0)\n  ) {\n    content = <p>Could not fetch any data.</p>;\n  }\n  return content;\n};\n\nexport default CurrencyPicker;\n"]},"metadata":{},"sourceType":"module"}