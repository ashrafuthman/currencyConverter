{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/ashraf/code/ashrafuthman/react-hooks-introduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/ashraf/code/ashrafuthman/react-hooks-introduction/src/components/CurrencyPicker.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useCurrencyLayer } from '../hooks/currencyLayer';\nimport './CurrencyPicker.css';\n\nconst CurrencyPicker = props => {\n  _s();\n\n  const _useCurrencyLayer = useCurrencyLayer({\n    selectedCurrency: props.selectedCurrency,\n    chosenSide: props.chosenSide,\n    currencies: ['EUR', 'CHF']\n  }, []),\n        _useCurrencyLayer2 = _slicedToArray(_useCurrencyLayer, 2),\n        isLoading = _useCurrencyLayer2[0],\n        fetchedData = _useCurrencyLayer2[1];\n\n  const getLastWeekDates = () => {\n    setLastWeekDates(['1999-02-03', '1999-02-04']);\n  };\n\n  const selectedCurrencys = fetchedData ? Object.keys(fetchedData).map((currency, index) => ({\n    id: index + 1,\n    name: currency,\n    value: fetchedData[currency]\n  })) : [];\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading Currencys...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 17\n  }, this);\n\n  if (!isLoading && selectedCurrencys && selectedCurrencys.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: props.onCurrencySelect,\n      value: props.selectedCurrency.key,\n      className: props.side,\n      children: selectedCurrencys.map(currency => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: currency.name,\n        children: currency.name\n      }, currency.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  } else if (!isLoading && (!selectedCurrencys || selectedCurrencys.length === 0)) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Could not fetch any data.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }, this);\n  }\n\n  return content;\n};\n\n_s(CurrencyPicker, \"n14PydaXUL0pOdKmSMjxG6uL2Yw=\", false, function () {\n  return [useCurrencyLayer];\n});\n\n_c = CurrencyPicker;\nexport default CurrencyPicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencyPicker\");","map":{"version":3,"sources":["/home/ashraf/code/ashrafuthman/react-hooks-introduction/src/components/CurrencyPicker.js"],"names":["React","useCurrencyLayer","CurrencyPicker","props","selectedCurrency","chosenSide","currencies","isLoading","fetchedData","getLastWeekDates","setLastWeekDates","selectedCurrencys","Object","keys","map","currency","index","id","name","value","content","length","onCurrencySelect","key","side"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAO,sBAAP;;AAEA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAAA;;AAAA,4BACGF,gBAAgB,CAC/C;AAAEG,IAAAA,gBAAgB,EAAED,KAAK,CAACC,gBAA1B;AACEC,IAAAA,UAAU,EAAEF,KAAK,CAACE,UADpB;AAEEC,IAAAA,UAAU,EAAE,CAAC,KAAD,EAAO,KAAP;AAFd,GAD+C,EAGhB,EAHgB,CADnB;AAAA;AAAA,QACvBC,SADuB;AAAA,QACZC,WADY;;AAM9B,QAAMC,gBAAgB,GAAG,MAAM;AAC7BC,IAAAA,gBAAgB,CAAC,CAAC,YAAD,EAAe,YAAf,CAAD,CAAhB;AACD,GAFD;;AAIA,QAAMC,iBAAiB,GAAGH,WAAW,GACjCI,MAAM,CAACC,IAAP,CAAYL,WAAZ,EAAyBM,GAAzB,CAA6B,CAACC,QAAD,EAAWC,KAAX,MAAsB;AACjDC,IAAAA,EAAE,EAAED,KAAK,GAAG,CADqC;AAEjDE,IAAAA,IAAI,EAAEH,QAF2C;AAGjDI,IAAAA,KAAK,EAAEX,WAAW,CAACO,QAAD;AAH+B,GAAtB,CAA7B,CADiC,GAMjC,EANJ;;AAQA,MAAIK,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;;AAEA,MAAI,CAACb,SAAD,IAAcI,iBAAd,IAAmCA,iBAAiB,CAACU,MAAlB,GAA2B,CAAlE,EAAqE;AACnED,IAAAA,OAAO,gBACL;AACE,MAAA,QAAQ,EAAEjB,KAAK,CAACmB,gBADlB;AAEE,MAAA,KAAK,EAAEnB,KAAK,CAACC,gBAAN,CAAuBmB,GAFhC;AAGE,MAAA,SAAS,EAAEpB,KAAK,CAACqB,IAHnB;AAAA,gBAKGb,iBAAiB,CAACG,GAAlB,CAAsBC,QAAQ,iBAC7B;AAA0B,QAAA,KAAK,EAAEA,QAAQ,CAACG,IAA1C;AAAA,kBACGH,QAAQ,CAACG;AADZ,SAAaH,QAAQ,CAACE,EAAtB;AAAA;AAAA;AAAA;AAAA,cADD;AALH;AAAA;AAAA;AAAA;AAAA,YADF;AAaD,GAdD,MAcO,IACL,CAACV,SAAD,KACC,CAACI,iBAAD,IAAsBA,iBAAiB,CAACU,MAAlB,KAA6B,CADpD,CADK,EAGL;AACAD,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AACD,SAAOA,OAAP;AACD,CAzCD;;GAAMlB,c;UAC6BD,gB;;;KAD7BC,c;AA2CN,eAAeA,cAAf","sourcesContent":["import React from 'react';\nimport { useCurrencyLayer } from '../hooks/currencyLayer';\nimport './CurrencyPicker.css';\n\nconst CurrencyPicker = props => {\n  const [isLoading, fetchedData] = useCurrencyLayer(\n    { selectedCurrency: props.selectedCurrency,\n      chosenSide: props.chosenSide,\n      currencies: ['EUR','CHF'] }, []);\n\n  const getLastWeekDates = () => {\n    setLastWeekDates(['1999-02-03', '1999-02-04']);\n  };\n\n  const selectedCurrencys = fetchedData\n    ? Object.keys(fetchedData).map((currency, index) => ({\n        id: index + 1,\n        name: currency,\n        value: fetchedData[currency]\n      }))\n    : [];\n\n  let content = <p>Loading Currencys...</p>;\n\n  if (!isLoading && selectedCurrencys && selectedCurrencys.length > 0) {\n    content = (\n      <select\n        onChange={props.onCurrencySelect}\n        value={props.selectedCurrency.key}\n        className={props.side}\n      >\n        {selectedCurrencys.map(currency => (\n          <option key={currency.id} value={currency.name}>\n            {currency.name}\n          </option>\n        ))}\n      </select>\n    );\n  } else if (\n    !isLoading &&\n    (!selectedCurrencys || selectedCurrencys.length === 0)\n  ) {\n    content = <p>Could not fetch any data.</p>;\n  }\n  return content;\n};\n\nexport default CurrencyPicker;\n"]},"metadata":{},"sourceType":"module"}