{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/ashraf/code/ashrafuthman/react-hooks-introduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/ashraf/code/ashrafuthman/react-hooks-introduction/src/components/Currency.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useCurrencyLayer } from '../hooks/currencyLayer';\nimport Summary from './Summary';\n\nconst Currency = props => {\n  _s2();\n\n  if (props.chosenSide === 'realtime') {\n    const _useCurrencyLayer = useCurrencyLayer({\n      chosenSide: props.chosenSide,\n      currencies: [props.selectedCurrency]\n    }, [props.selectedCurrency]),\n          _useCurrencyLayer2 = _slicedToArray(_useCurrencyLayer, 2),\n          isLoading = _useCurrencyLayer2[0],\n          fetchedData = _useCurrencyLayer2[1];\n  } else {\n    var _s = $RefreshSig$();\n\n    const dates = ['1999-02-03', '1999-02-04'];\n    const result = [];\n    dates.map(_s(date => {\n      _s();\n\n      const _useCurrencyLayer3 = useCurrencyLayer({\n        selectedCurrency: props.selectedCurrency,\n        chosenSide: 'weekly',\n        currencies: ['EUR', 'CHF'],\n        date: date\n      }, []),\n            _useCurrencyLayer4 = _slicedToArray(_useCurrencyLayer3, 2),\n            isLoading = _useCurrencyLayer4[0],\n            fetchedData = _useCurrencyLayer4[1];\n\n      result.push(fetchedData);\n    }, \"n14PydaXUL0pOdKmSMjxG6uL2Yw=\", false, function () {\n      return [useCurrencyLayer];\n    }));\n    debugger;\n  }\n\n  let loadedCurrency = null;\n\n  if (fetchedData) {\n    loadedCurrency = {\n      id: props.selectedCurrency,\n      currencyValue: fetchedData\n    };\n  } // useEffect(() => {\n  //   return () => {\n  //     console.log('component did unmount');\n  //   };\n  // }, []);\n\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading Currency...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 17\n  }, this);\n\n  if (!isLoading && loadedCurrency) {\n    content = /*#__PURE__*/_jsxDEV(Summary, {\n      name: loadedCurrency.id,\n      chosenSide: props.chosenSide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  } else if (!isLoading && !loadedCurrency) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Failed to fetch Currency.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }, this);\n  }\n\n  return content;\n};\n\n_s2(Currency, \"n14PydaXUL0pOdKmSMjxG6uL2Yw=\", false, function () {\n  return [useCurrencyLayer];\n});\n\n_c = Currency;\nexport default _c2 = /*#__PURE__*/React.memo(Currency);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Currency\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/ashraf/code/ashrafuthman/react-hooks-introduction/src/components/Currency.js"],"names":["React","useEffect","useCurrencyLayer","Summary","Currency","props","chosenSide","currencies","selectedCurrency","isLoading","fetchedData","dates","result","map","date","push","loadedCurrency","id","currencyValue","content","memo"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAAA;;AACxB,MAAIA,KAAK,CAACC,UAAN,KAAqB,UAAzB,EAAqC;AAAA,8BACFJ,gBAAgB,CAC/C;AAACI,MAAAA,UAAU,EAAED,KAAK,CAACC,UAAnB;AAAgCC,MAAAA,UAAU,EAAE,CAACF,KAAK,CAACG,gBAAP;AAA5C,KAD+C,EAE/C,CAACH,KAAK,CAACG,gBAAP,CAF+C,CADd;AAAA;AAAA,UAC5BC,SAD4B;AAAA,UACjBC,WADiB;AAKpC,GALD,MAKO;AAAA;;AACL,UAAMC,KAAK,GAAG,CAAC,YAAD,EAAe,YAAf,CAAd;AACA,UAAMC,MAAM,GAAG,EAAf;AACAD,IAAAA,KAAK,CAACE,GAAN,IAAWC,IAAD,IAAS;AAAA;;AAAA,iCACgBZ,gBAAgB,CAC/C;AAAEM,QAAAA,gBAAgB,EAAEH,KAAK,CAACG,gBAA1B;AACEF,QAAAA,UAAU,EAAE,QADd;AAEEC,QAAAA,UAAU,EAAE,CAAC,KAAD,EAAO,KAAP,CAFd;AAE6BO,QAAAA,IAAI,EAAEA;AAFnC,OAD+C,EAGJ,EAHI,CADhC;AAAA;AAAA,YACVL,SADU;AAAA,YACCC,WADD;;AAKbE,MAAAA,MAAM,CAACG,IAAP,CAAYL,WAAZ;AACL,KAND;AAAA,cACmCR,gBADnC;AAAA;AAOA;AACD;;AAED,MAAIc,cAAc,GAAG,IAArB;;AAEA,MAAIN,WAAJ,EAAiB;AACfM,IAAAA,cAAc,GAAG;AACfC,MAAAA,EAAE,EAAEZ,KAAK,CAACG,gBADK;AAEfU,MAAAA,aAAa,EAAER;AAFA,KAAjB;AAID,GA1BuB,CA4BxB;AACA;AACA;AACA;AACA;;;AAEA,MAAIS,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;;AAEA,MAAI,CAACV,SAAD,IAAcO,cAAlB,EAAkC;AAChCG,IAAAA,OAAO,gBACL,QAAC,OAAD;AACE,MAAA,IAAI,EAAEH,cAAc,CAACC,EADvB;AAEE,MAAA,UAAU,EAAEZ,KAAK,CAACC;AAFpB;AAAA;AAAA;AAAA;AAAA,YADF;AAMD,GAPD,MAOO,IAAI,CAACG,SAAD,IAAc,CAACO,cAAnB,EAAmC;AACxCG,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AACD,SAAOA,OAAP;AACD,CA/CD;;IAAMf,Q;UAE+BF,gB;;;KAF/BE,Q;AAiDN,kCAAeJ,KAAK,CAACoB,IAAN,CAAWhB,QAAX,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useCurrencyLayer } from '../hooks/currencyLayer';\nimport Summary from './Summary';\n\nconst Currency = props => {\n  if (props.chosenSide === 'realtime') {\n    const [isLoading, fetchedData] = useCurrencyLayer(\n      {chosenSide: props.chosenSide , currencies: [props.selectedCurrency]},\n      [props.selectedCurrency]\n    );\n  } else {\n    const dates = ['1999-02-03', '1999-02-04'];\n    const result = [];\n    dates.map((date)=> {\n      const [isLoading, fetchedData] = useCurrencyLayer(\n        { selectedCurrency: props.selectedCurrency,\n          chosenSide: 'weekly',\n          currencies: ['EUR','CHF'], date: date }, []);\n          result.push(fetchedData)\n    })\n    debugger;\n  }\n\n  let loadedCurrency = null;\n\n  if (fetchedData) {\n    loadedCurrency = {\n      id: props.selectedCurrency,\n      currencyValue: fetchedData,\n    };\n  }\n\n  // useEffect(() => {\n  //   return () => {\n  //     console.log('component did unmount');\n  //   };\n  // }, []);\n\n  let content = <p>Loading Currency...</p>;\n\n  if (!isLoading && loadedCurrency) {\n    content = (\n      <Summary\n        name={loadedCurrency.id}\n        chosenSide={props.chosenSide}\n      />\n    );\n  } else if (!isLoading && !loadedCurrency) {\n    content = <p>Failed to fetch Currency.</p>;\n  }\n  return content;\n};\n\nexport default React.memo(Currency);\n"]},"metadata":{},"sourceType":"module"}