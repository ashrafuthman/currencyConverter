{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/ashraf/code/ashrafuthman/react-hooks-introduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ashraf/code/ashrafuthman/react-hooks-introduction/src/components/CurrencyPicker.js\";\nimport React from 'react';\nimport { useCurrencyLayer } from '../hooks/currencyLayer';\nimport './CurrencyPicker.css';\n\nconst CurrencyPicker = props => {\n  var _s = $RefreshSig$();\n\n  const dates = ['1999-02-03', '1999-02-04'];\n  const result = [];\n  dates.map(_s(date => {\n    _s();\n\n    const _useCurrencyLayer = useCurrencyLayer({\n      selectedCurrency: props.selectedCurrency,\n      chosenSide: 'weekly',\n      currencies: ['EUR', 'CHF'],\n      dates: data\n    }, []),\n          _useCurrencyLayer2 = _slicedToArray(_useCurrencyLayer, 2),\n          isLoading = _useCurrencyLayer2[0],\n          fetchedData = _useCurrencyLayer2[1];\n\n    result.push(fetchedData);\n  }, \"n14PydaXUL0pOdKmSMjxG6uL2Yw=\", false, function () {\n    return [useCurrencyLayer];\n  }));\n  debugger;\n  const selectedCurrencys = fetchedData ? Object.keys(fetchedData).map((currency, index) => ({\n    id: index + 1,\n    name: currency,\n    value: fetchedData[currency]\n  })) : [];\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading Currencys...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 17\n  }, this);\n\n  if (!isLoading && selectedCurrencys && selectedCurrencys.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: props.onCurrencySelect,\n      value: props.selectedCurrency.key,\n      className: props.side,\n      children: selectedCurrencys.map(currency => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: currency.name,\n        children: currency.name\n      }, currency.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  } else if (!isLoading && (!selectedCurrencys || selectedCurrencys.length === 0)) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Could not fetch any data.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }, this);\n  }\n\n  return content;\n};\n\n_c = CurrencyPicker;\nexport default CurrencyPicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencyPicker\");","map":{"version":3,"sources":["/home/ashraf/code/ashrafuthman/react-hooks-introduction/src/components/CurrencyPicker.js"],"names":["React","useCurrencyLayer","CurrencyPicker","props","dates","result","map","date","selectedCurrency","chosenSide","currencies","data","isLoading","fetchedData","push","selectedCurrencys","Object","keys","currency","index","id","name","value","content","length","onCurrencySelect","key","side"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAO,sBAAP;;AAEA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAAA;;AAC9B,QAAMC,KAAK,GAAG,CAAC,YAAD,EAAe,YAAf,CAAd;AACA,QAAMC,MAAM,GAAG,EAAf;AACAD,EAAAA,KAAK,CAACE,GAAN,IAAWC,IAAD,IAAS;AAAA;;AAAA,8BACgBN,gBAAgB,CAC/C;AAAEO,MAAAA,gBAAgB,EAAEL,KAAK,CAACK,gBAA1B;AACEC,MAAAA,UAAU,EAAE,QADd;AAEEC,MAAAA,UAAU,EAAE,CAAC,KAAD,EAAO,KAAP,CAFd;AAE6BN,MAAAA,KAAK,EAAEO;AAFpC,KAD+C,EAGH,EAHG,CADhC;AAAA;AAAA,UACVC,SADU;AAAA,UACCC,WADD;;AAKbR,IAAAA,MAAM,CAACS,IAAP,CAAYD,WAAZ;AACL,GAND;AAAA,YACmCZ,gBADnC;AAAA;AAOA;AAEA,QAAMc,iBAAiB,GAAGF,WAAW,GACjCG,MAAM,CAACC,IAAP,CAAYJ,WAAZ,EAAyBP,GAAzB,CAA6B,CAACY,QAAD,EAAWC,KAAX,MAAsB;AACjDC,IAAAA,EAAE,EAAED,KAAK,GAAG,CADqC;AAEjDE,IAAAA,IAAI,EAAEH,QAF2C;AAGjDI,IAAAA,KAAK,EAAET,WAAW,CAACK,QAAD;AAH+B,GAAtB,CAA7B,CADiC,GAMjC,EANJ;;AAQA,MAAIK,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;;AAEA,MAAI,CAACX,SAAD,IAAcG,iBAAd,IAAmCA,iBAAiB,CAACS,MAAlB,GAA2B,CAAlE,EAAqE;AACnED,IAAAA,OAAO,gBACL;AACE,MAAA,QAAQ,EAAEpB,KAAK,CAACsB,gBADlB;AAEE,MAAA,KAAK,EAAEtB,KAAK,CAACK,gBAAN,CAAuBkB,GAFhC;AAGE,MAAA,SAAS,EAAEvB,KAAK,CAACwB,IAHnB;AAAA,gBAKGZ,iBAAiB,CAACT,GAAlB,CAAsBY,QAAQ,iBAC7B;AAA0B,QAAA,KAAK,EAAEA,QAAQ,CAACG,IAA1C;AAAA,kBACGH,QAAQ,CAACG;AADZ,SAAaH,QAAQ,CAACE,EAAtB;AAAA;AAAA;AAAA;AAAA,cADD;AALH;AAAA;AAAA;AAAA;AAAA,YADF;AAaD,GAdD,MAcO,IACL,CAACR,SAAD,KACC,CAACG,iBAAD,IAAsBA,iBAAiB,CAACS,MAAlB,KAA6B,CADpD,CADK,EAGL;AACAD,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AACD,SAAOA,OAAP;AACD,CA3CD;;KAAMrB,c;AA6CN,eAAeA,cAAf","sourcesContent":["import React from 'react';\nimport { useCurrencyLayer } from '../hooks/currencyLayer';\nimport './CurrencyPicker.css';\n\nconst CurrencyPicker = props => {\n  const dates = ['1999-02-03', '1999-02-04'];\n  const result = [];\n  dates.map((date)=> {\n    const [isLoading, fetchedData] = useCurrencyLayer(\n      { selectedCurrency: props.selectedCurrency,\n        chosenSide: 'weekly',\n        currencies: ['EUR','CHF'], dates: data }, []);\n        result.push(fetchedData)\n  })\n  debugger;\n\n  const selectedCurrencys = fetchedData\n    ? Object.keys(fetchedData).map((currency, index) => ({\n        id: index + 1,\n        name: currency,\n        value: fetchedData[currency]\n      }))\n    : [];\n\n  let content = <p>Loading Currencys...</p>;\n\n  if (!isLoading && selectedCurrencys && selectedCurrencys.length > 0) {\n    content = (\n      <select\n        onChange={props.onCurrencySelect}\n        value={props.selectedCurrency.key}\n        className={props.side}\n      >\n        {selectedCurrencys.map(currency => (\n          <option key={currency.id} value={currency.name}>\n            {currency.name}\n          </option>\n        ))}\n      </select>\n    );\n  } else if (\n    !isLoading &&\n    (!selectedCurrencys || selectedCurrencys.length === 0)\n  ) {\n    content = <p>Could not fetch any data.</p>;\n  }\n  return content;\n};\n\nexport default CurrencyPicker;\n"]},"metadata":{},"sourceType":"module"}