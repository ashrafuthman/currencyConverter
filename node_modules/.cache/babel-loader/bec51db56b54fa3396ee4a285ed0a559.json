{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/ashraf/code/ashrafuthman/react-hooks-introduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/ashraf/code/ashrafuthman/react-hooks-introduction/src/components/CurrencyPicker.js\",\n    _s = $RefreshSig$();\n\nimport { useCurrencyLayer } from '../hooks/currencyLayer';\nimport './CurrencyPicker.css';\nimport Summary from './Summary';\nimport React, { useState } from 'react';\n\nconst CurrencyPicker = () => {\n  _s();\n\n  const _useState = useState('USDEUR'),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedCurrency = _useState2[0],\n        setSelectedCurrency = _useState2[1];\n\n  const _useCurrencyLayer = useCurrencyLayer({\n    selectedCurrency,\n    currencies: ['EUR', 'CHF'],\n    date: ['2020-01-01', '2020-01-02', '2020-01-03', '2020-01-04', '2020-01-05', '2020-01-06', '2020-01-07']\n  }, []),\n        _useCurrencyLayer2 = _slicedToArray(_useCurrencyLayer, 2),\n        isLoading = _useCurrencyLayer2[0],\n        fetchedData = _useCurrencyLayer2[1];\n\n  let latestCurrencies;\n  const currencyValues = [];\n  const currencyDate = [];\n\n  const currencySelectHandler = event => {\n    const currency = event.target.value;\n    setSelectedCurrency(currency);\n  };\n\n  const currencyName = name => {\n    let result;\n\n    if (name.includes('EUR')) {\n      result = name.replace('EUR', '');\n    } else {\n      result = name.replace('USD', '');\n    }\n\n    return result;\n  };\n\n  if (fetchedData) {\n    fetchedData.forEach((data, index) => {\n      if (index === 6) {\n        latestCurrencies = Object.keys(data.currencyValues).map((currency, index) => ({\n          id: index + 1,\n          name: currency\n        }));\n      }\n\n      currencyValues.push(data.currencyValues[selectedCurrency]);\n      currencyDate.push(data.date);\n    });\n  }\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading Currencys...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 17\n  }, this);\n\n  if (!isLoading && latestCurrencies && latestCurrencies.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: currencySelectHandler,\n        value: selectedCurrency,\n        children: latestCurrencies.map(currency => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: currency.name,\n          children: currencyName(currency.name)\n        }, currency.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Summary, {\n        selectedCurrency: selectedCurrency,\n        currencyValues: currencyValues,\n        dates: currencyDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else if (!isLoading && (!latestCurrencies || latestCurrencies.length === 0)) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Could not fetch any data.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }, this);\n  }\n\n  return content;\n};\n\n_s(CurrencyPicker, \"8+nfksKGzDO65BeYRZT0hAK1GVU=\", false, function () {\n  return [useCurrencyLayer];\n});\n\n_c = CurrencyPicker;\nexport default CurrencyPicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencyPicker\");","map":{"version":3,"sources":["/home/ashraf/code/ashrafuthman/react-hooks-introduction/src/components/CurrencyPicker.js"],"names":["useCurrencyLayer","Summary","React","useState","CurrencyPicker","selectedCurrency","setSelectedCurrency","currencies","date","isLoading","fetchedData","latestCurrencies","currencyValues","currencyDate","currencySelectHandler","event","currency","target","value","currencyName","name","result","includes","replace","forEach","data","index","Object","keys","map","id","push","content","length"],"mappings":"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","sourcesContent":["import { useCurrencyLayer } from '../hooks/currencyLayer';\nimport './CurrencyPicker.css';\nimport Summary from './Summary';\nimport React, { useState } from 'react';\n\nconst CurrencyPicker = () => {\n  const [selectedCurrency, setSelectedCurrency] = useState('USDEUR');\n  const [isLoading, fetchedData] = useCurrencyLayer(\n    { selectedCurrency, currencies: ['EUR','CHF'], date: [\n      '2020-01-01',\n      '2020-01-02',\n      '2020-01-03',\n      '2020-01-04',\n      '2020-01-05', '2020-01-06' , '2020-01-07'] }, []);\n  let latestCurrencies;\n  const currencyValues = [];\n  const currencyDate = [];\n\n  const currencySelectHandler = event => {\n      const currency = event.target.value;\n      setSelectedCurrency(currency);\n  };\n\n  const currencyName = name => {\n    let result;\n    if (name.includes('EUR')) {\n      result = name.replace('EUR', '')\n    } else {\n      result = name.replace('USD', '')\n    }\n    return result\n  };\n\n\n  if (fetchedData) {\n   fetchedData.forEach((data, index) => {\n    if (index === 6) {\n      latestCurrencies = Object.keys(data.currencyValues).map((currency, index) => ({\n        id: index + 1,\n        name: currency,\n      }));\n    }\n     currencyValues.push(data.currencyValues[selectedCurrency]);\n     currencyDate.push(data.date);\n    })\n  }\n\n  let content = <p>Loading Currencys...</p>;\n\n  if (!isLoading && latestCurrencies && latestCurrencies.length > 0) {\n    content = (\n      <>\n        <select\n          onChange={currencySelectHandler}\n          value={selectedCurrency}\n        >\n          {latestCurrencies.map(currency => (\n            <option key={currency.id} value={currency.name}>\n              {currencyName(currency.name)}\n            </option>\n          ))}\n        </select>\n        <br/>\n        <Summary\n          selectedCurrency={selectedCurrency}\n          currencyValues={currencyValues}\n          dates={currencyDate}\n        />\n      </>\n    );\n  } else if (\n    !isLoading &&\n    (!latestCurrencies || latestCurrencies.length === 0)\n  ) {\n    content = <p>Could not fetch any data.</p>;\n  }\n  return content;\n};\n\nexport default CurrencyPicker;\n"]},"metadata":{},"sourceType":"module"}