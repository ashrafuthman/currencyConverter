{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/ashraf/code/ashrafuthman/react-hooks-introduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/ashraf/code/ashrafuthman/react-hooks-introduction/src/components/CurrencyPicker.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useCurrencyLayer } from '../hooks/currencyLayer';\nimport './CurrencyPicker.css';\n\nconst CurrencyPicker = props => {\n  _s();\n\n  const _useCurrencyLayer = useCurrencyLayer({\n    selectedCurrency: props.selectedCurrency,\n    chosenSide: props.chosenSide\n  }, []),\n        _useCurrencyLayer2 = _slicedToArray(_useCurrencyLayer, 2),\n        isLoading = _useCurrencyLayer2[0],\n        fetchedData = _useCurrencyLayer2[1];\n\n  const selectedCurrencys = fetchedData ? Object.keys(fetchedData).map(currency => ({\n    name: currency,\n    value: fetchedData[currency]\n  })) : [];\n\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading Currencys...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 17\n  }, this);\n\n  if (!isLoading && selectedCurrencys && selectedCurrencys.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: props.onCurrencySelect,\n      value: props.selectedCurrency,\n      className: props.side,\n      children: selectedCurrencys.map(currency => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: currency.value,\n        children: currency.name\n      }, currency.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  } else if (!isLoading && (!selectedCurrencys || selectedCurrencys.length === 0)) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Could not fetch any data.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }, this);\n  }\n\n  return content;\n};\n\n_s(CurrencyPicker, \"n14PydaXUL0pOdKmSMjxG6uL2Yw=\", false, function () {\n  return [useCurrencyLayer];\n});\n\n_c = CurrencyPicker;\nexport default CurrencyPicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencyPicker\");","map":{"version":3,"sources":["/home/ashraf/code/ashrafuthman/react-hooks-introduction/src/components/CurrencyPicker.js"],"names":["React","useCurrencyLayer","CurrencyPicker","props","selectedCurrency","chosenSide","isLoading","fetchedData","selectedCurrencys","Object","keys","map","currency","name","value","content","length","onCurrencySelect","side"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAO,sBAAP;;AAEA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAAA;;AAAA,4BACGF,gBAAgB,CAC/C;AAAEG,IAAAA,gBAAgB,EAAED,KAAK,CAACC,gBAA1B;AACEC,IAAAA,UAAU,EAAEF,KAAK,CAACE;AADpB,GAD+C,EAEb,EAFa,CADnB;AAAA;AAAA,QACvBC,SADuB;AAAA,QACZC,WADY;;AAK9B,QAAMC,iBAAiB,GAAGD,WAAW,GACjCE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA8BC,QAAD,KAAe;AAC1CC,IAAAA,IAAI,EAAED,QADoC;AAE1CE,IAAAA,KAAK,EAAEP,WAAW,CAACK,QAAD;AAFwB,GAAf,CAA7B,CADiC,GAKjC,EALJ;;AAOA,MAAIG,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;;AAEA,MAAI,CAACT,SAAD,IAAcE,iBAAd,IAAmCA,iBAAiB,CAACQ,MAAlB,GAA2B,CAAlE,EAAqE;AACnED,IAAAA,OAAO,gBACL;AACE,MAAA,QAAQ,EAAEZ,KAAK,CAACc,gBADlB;AAEE,MAAA,KAAK,EAAEd,KAAK,CAACC,gBAFf;AAGE,MAAA,SAAS,EAAED,KAAK,CAACe,IAHnB;AAAA,gBAKGV,iBAAiB,CAACG,GAAlB,CAAsBC,QAAQ,iBAC7B;AAA6B,QAAA,KAAK,EAAEA,QAAQ,CAACE,KAA7C;AAAA,kBACGF,QAAQ,CAACC;AADZ,SAAaD,QAAQ,CAACE,KAAtB;AAAA;AAAA;AAAA;AAAA,cADD;AALH;AAAA;AAAA;AAAA;AAAA,YADF;AAaD,GAdD,MAcO,IACL,CAACR,SAAD,KACC,CAACE,iBAAD,IAAsBA,iBAAiB,CAACQ,MAAlB,KAA6B,CADpD,CADK,EAGL;AACAD,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AACD,SAAOA,OAAP;AACD,CAnCD;;GAAMb,c;UAC6BD,gB;;;KAD7BC,c;AAqCN,eAAeA,cAAf","sourcesContent":["import React from 'react';\nimport { useCurrencyLayer } from '../hooks/currencyLayer';\nimport './CurrencyPicker.css';\n\nconst CurrencyPicker = props => {\n  const [isLoading, fetchedData] = useCurrencyLayer(\n    { selectedCurrency: props.selectedCurrency,\n      chosenSide: props.chosenSide }, []);\n\n  const selectedCurrencys = fetchedData\n    ? Object.keys(fetchedData).map((currency) => ({\n        name: currency,\n        value: fetchedData[currency]\n      }))\n    : [];\n\n  let content = <p>Loading Currencys...</p>;\n\n  if (!isLoading && selectedCurrencys && selectedCurrencys.length > 0) {\n    content = (\n      <select\n        onChange={props.onCurrencySelect}\n        value={props.selectedCurrency}\n        className={props.side}\n      >\n        {selectedCurrencys.map(currency => (\n          <option key={currency.value} value={currency.value}>\n            {currency.name}\n          </option>\n        ))}\n      </select>\n    );\n  } else if (\n    !isLoading &&\n    (!selectedCurrencys || selectedCurrencys.length === 0)\n  ) {\n    content = <p>Could not fetch any data.</p>;\n  }\n  return content;\n};\n\nexport default CurrencyPicker;\n"]},"metadata":{},"sourceType":"module"}