{"ast":null,"code":"import _regeneratorRuntime from \"/home/ashraf/code/ashrafuthman/react-hooks-introduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/ashraf/code/ashrafuthman/react-hooks-introduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"/home/ashraf/code/ashrafuthman/react-hooks-introduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/ashraf/code/ashrafuthman/react-hooks-introduction/src/components/CurrencyPicker.js\",\n    _this = this;\n\nimport React from 'react';\nimport { useCurrencyLayer } from '../hooks/currencyLayer';\nimport './CurrencyPicker.css';\n\nconst CurrencyPicker = /*#__PURE__*/function () {\n  var _s = $RefreshSig$();\n\n  var _ref = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n    var _yield$useCurrencyLay, _yield$useCurrencyLay2, isLoading, fetchedData, selectedCurrencys, content;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _s();\n\n          _context.next = 3;\n          return useCurrencyLayer({\n            selectedCurrency: props.selectedCurrency,\n            chosenSide: props.chosenSide,\n            currencies: ['EUR', 'CHF']\n          }, []);\n\n        case 3:\n          _yield$useCurrencyLay = _context.sent;\n          _yield$useCurrencyLay2 = _slicedToArray(_yield$useCurrencyLay, 2);\n          isLoading = _yield$useCurrencyLay2[0];\n          fetchedData = _yield$useCurrencyLay2[1];\n          selectedCurrencys = fetchedData ? Object.keys(fetchedData).map((currency, index) => ({\n            id: index + 1,\n            name: currency,\n            value: fetchedData[currency]\n          })) : [];\n          debugger;\n          content = /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading Currencys...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 17\n          }, _this);\n\n          if (!isLoading && selectedCurrencys && selectedCurrencys.length > 0) {\n            content = /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: props.onCurrencySelect,\n              value: props.selectedCurrency.key,\n              className: props.side,\n              children: selectedCurrencys.map(currency => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: currency.name,\n                children: currency.name\n              }, currency.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 11\n              }, _this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 7\n            }, _this);\n          } else if (!isLoading && (!selectedCurrencys || selectedCurrencys.length === 0)) {\n            content = /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Could not fetch any data.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, _this);\n          }\n\n          return _context.abrupt(\"return\", content);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }), \"4pph6aFqneQ+755cvaMj+y7hVj4=\", false, function () {\n    return [useCurrencyLayer];\n  }));\n\n  return function CurrencyPicker(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n_c = CurrencyPicker;\nexport default CurrencyPicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencyPicker\");","map":{"version":3,"sources":["/home/ashraf/code/ashrafuthman/react-hooks-introduction/src/components/CurrencyPicker.js"],"names":["React","useCurrencyLayer","CurrencyPicker","props","selectedCurrency","chosenSide","currencies","isLoading","fetchedData","selectedCurrencys","Object","keys","map","currency","index","id","name","value","content","length","onCurrencySelect","key","side"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAO,sBAAP;;AAEA,MAAMC,cAAc;AAAA;;AAAA,yEAAE,iBAAMC,KAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,iBACmBF,gBAAgB,CACrD;AAAEG,YAAAA,gBAAgB,EAAED,KAAK,CAACC,gBAA1B;AACEC,YAAAA,UAAU,EAAEF,KAAK,CAACE,UADpB;AAEEC,YAAAA,UAAU,EAAE,CAAC,KAAD,EAAO,KAAP;AAFd,WADqD,EAGtB,EAHsB,CADnC;;AAAA;AAAA;AAAA;AACbC,UAAAA,SADa;AACFC,UAAAA,WADE;AAMdC,UAAAA,iBANc,GAMMD,WAAW,GACjCE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6B,CAACC,QAAD,EAAWC,KAAX,MAAsB;AACjDC,YAAAA,EAAE,EAAED,KAAK,GAAG,CADqC;AAEjDE,YAAAA,IAAI,EAAEH,QAF2C;AAGjDI,YAAAA,KAAK,EAAET,WAAW,CAACK,QAAD;AAH+B,WAAtB,CAA7B,CADiC,GAMjC,EAZgB;AAapB;AACIK,UAAAA,OAdgB,gBAcN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAdM;;AAgBpB,cAAI,CAACX,SAAD,IAAcE,iBAAd,IAAmCA,iBAAiB,CAACU,MAAlB,GAA2B,CAAlE,EAAqE;AACnED,YAAAA,OAAO,gBACL;AACE,cAAA,QAAQ,EAAEf,KAAK,CAACiB,gBADlB;AAEE,cAAA,KAAK,EAAEjB,KAAK,CAACC,gBAAN,CAAuBiB,GAFhC;AAGE,cAAA,SAAS,EAAElB,KAAK,CAACmB,IAHnB;AAAA,wBAKGb,iBAAiB,CAACG,GAAlB,CAAsBC,QAAQ,iBAC7B;AAA0B,gBAAA,KAAK,EAAEA,QAAQ,CAACG,IAA1C;AAAA,0BACGH,QAAQ,CAACG;AADZ,iBAAaH,QAAQ,CAACE,EAAtB;AAAA;AAAA;AAAA;AAAA,uBADD;AALH;AAAA;AAAA;AAAA;AAAA,qBADF;AAaD,WAdD,MAcO,IACL,CAACR,SAAD,KACC,CAACE,iBAAD,IAAsBA,iBAAiB,CAACU,MAAlB,KAA6B,CADpD,CADK,EAGL;AACAD,YAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAV;AACD;;AAnCmB,2CAoCbA,OApCa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAF;AAAA,YACqBjB,gBADrB;AAAA;;AAAA,kBAAdC,cAAc;AAAA;AAAA;AAAA,GAApB;;KAAMA,c;AAuCN,eAAeA,cAAf","sourcesContent":["import React from 'react';\nimport { useCurrencyLayer } from '../hooks/currencyLayer';\nimport './CurrencyPicker.css';\n\nconst CurrencyPicker =async props => {\n  const [isLoading, fetchedData] = await useCurrencyLayer(\n    { selectedCurrency: props.selectedCurrency,\n      chosenSide: props.chosenSide,\n      currencies: ['EUR','CHF'] }, []);\n\n  const selectedCurrencys = fetchedData\n    ? Object.keys(fetchedData).map((currency, index) => ({\n        id: index + 1,\n        name: currency,\n        value: fetchedData[currency]\n      }))\n    : [];\n  debugger;\n  let content = <p>Loading Currencys...</p>;\n\n  if (!isLoading && selectedCurrencys && selectedCurrencys.length > 0) {\n    content = (\n      <select\n        onChange={props.onCurrencySelect}\n        value={props.selectedCurrency.key}\n        className={props.side}\n      >\n        {selectedCurrencys.map(currency => (\n          <option key={currency.id} value={currency.name}>\n            {currency.name}\n          </option>\n        ))}\n      </select>\n    );\n  } else if (\n    !isLoading &&\n    (!selectedCurrencys || selectedCurrencys.length === 0)\n  ) {\n    content = <p>Could not fetch any data.</p>;\n  }\n  return content;\n};\n\nexport default CurrencyPicker;\n"]},"metadata":{},"sourceType":"module"}